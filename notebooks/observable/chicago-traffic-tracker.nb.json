{
  "id": "5d009b86321f06fb",
  "slug": "chicago-traffic-tracker",
  "trashed": false,
  "description": "",
  "likes": 0,
  "publish_level": "public",
  "forks": 0,
  "fork_of": null,
  "update_time": "2021-06-17T14:33:58.513Z",
  "publish_time": "2021-06-16T20:39:41.819Z",
  "publish_version": 145,
  "thumbnail": "855f4654e70feece820af1cd690a1484039e8d6ca1d77d5d080bf96fcbbcb192",
  "default_thumbnail": "855f4654e70feece820af1cd690a1484039e8d6ca1d77d5d080bf96fcbbcb192",
  "roles": [],
  "sharing": null,
  "owner": {
    "id": "17b72db66175b428",
    "github_login": "RandomFractals",
    "avatar_url": "https://avatars1.githubusercontent.com/u/656833?v=4",
    "login": "randomfractals",
    "name": "Taras Novak",
    "bio": "I map 🌐 & graph  📈 data 🈸 ",
    "home_url": "https://www.linkedin.com/in/tarasnovak",
    "type": "individual"
  },
  "creator": {
    "id": "17b72db66175b428",
    "github_login": "RandomFractals",
    "avatar_url": "https://avatars1.githubusercontent.com/u/656833?v=4",
    "login": "randomfractals",
    "name": "Taras Novak",
    "bio": "I map 🌐 & graph  📈 data 🈸 ",
    "home_url": "https://www.linkedin.com/in/tarasnovak"
  },
  "collections": [
    {
      "id": "55a954f45c0be7c8",
      "type": "public",
      "slug": "deckgl",
      "title": "DeckGL",
      "description": "DeckGL maps",
      "update_time": "2021-06-16T20:19:49.324Z",
      "pinned": false,
      "ordered": true,
      "custom_thumbnail": null,
      "thumbnail": "38c7f53b846da4e440f0c8bb1266c6f744884a3b6f4c56601d8bc7ee040492a7",
      "listing_count": 4,
      "parent_collection_count": 0,
      "owner": {
        "id": "17b72db66175b428",
        "github_login": "RandomFractals",
        "avatar_url": "https://avatars1.githubusercontent.com/u/656833?v=4",
        "login": "randomfractals",
        "name": "Taras Novak",
        "bio": "I map 🌐 & graph  📈 data 🈸 ",
        "home_url": "https://www.linkedin.com/in/tarasnovak",
        "type": "individual"
      }
    },
    {
      "id": "c30622739accf157",
      "type": "public",
      "slug": "arquero",
      "title": "Arquero",
      "description": "Notebooks using Arquero JS library for manipulating data.",
      "update_time": "2021-06-08T11:51:29.570Z",
      "pinned": false,
      "ordered": false,
      "custom_thumbnail": null,
      "thumbnail": "f195a105405d38650d0fe79da26bb5a91994a4a231481a4ab062d223c36de082",
      "listing_count": 8,
      "parent_collection_count": 0,
      "owner": {
        "id": "17b72db66175b428",
        "github_login": "RandomFractals",
        "avatar_url": "https://avatars1.githubusercontent.com/u/656833?v=4",
        "login": "randomfractals",
        "name": "Taras Novak",
        "bio": "I map 🌐 & graph  📈 data 🈸 ",
        "home_url": "https://www.linkedin.com/in/tarasnovak",
        "type": "individual"
      }
    },
    {
      "id": "cf858224d6488195",
      "type": "public",
      "slug": "transportation",
      "title": "Transportation",
      "description": "Public transportation notebooks",
      "update_time": "2021-06-04T03:34:03.975Z",
      "pinned": false,
      "ordered": false,
      "custom_thumbnail": null,
      "thumbnail": "f195a105405d38650d0fe79da26bb5a91994a4a231481a4ab062d223c36de082",
      "listing_count": 12,
      "parent_collection_count": 0,
      "owner": {
        "id": "17b72db66175b428",
        "github_login": "RandomFractals",
        "avatar_url": "https://avatars1.githubusercontent.com/u/656833?v=4",
        "login": "randomfractals",
        "name": "Taras Novak",
        "bio": "I map 🌐 & graph  📈 data 🈸 ",
        "home_url": "https://www.linkedin.com/in/tarasnovak",
        "type": "individual"
      }
    },
    {
      "id": "cc3985e6b82c86b0",
      "type": "public",
      "slug": "maps",
      "title": "Maps",
      "description": "Various Maps",
      "update_time": "2018-09-28T13:20:05.815Z",
      "pinned": false,
      "ordered": false,
      "custom_thumbnail": null,
      "thumbnail": "855f4654e70feece820af1cd690a1484039e8d6ca1d77d5d080bf96fcbbcb192",
      "listing_count": 16,
      "parent_collection_count": 0,
      "owner": {
        "id": "17b72db66175b428",
        "github_login": "RandomFractals",
        "avatar_url": "https://avatars1.githubusercontent.com/u/656833?v=4",
        "login": "randomfractals",
        "name": "Taras Novak",
        "bio": "I map 🌐 & graph  📈 data 🈸 ",
        "home_url": "https://www.linkedin.com/in/tarasnovak",
        "type": "individual"
      }
    }
  ],
  "files": [],
  "comments": [],
  "commenting_lock": null,
  "version": 145,
  "title": "Chicago Traffic Tracker",
  "license": null,
  "copyright": "",
  "nodes": [
    {
      "id": 0,
      "value": "md`# Chicago Traffic Tracker\n\nData Source: [Chicago Transportation](https://data.cityofchicago.org/browse?category=Transportation) / [Chicago Traffic Tracker - Congestion Estimates by Segments](https://data.cityofchicago.org/Transportation/Chicago-Traffic-Tracker-Congestion-Estimates-by-Se/n4j6-wkkf)\n\nChicago Data Portal: [Chicago Traffic Tracker - Congestion Estimates by Segments Data](https://data.cityofchicago.org/Transportation/Chicago-Traffic-Tracker-Congestion-Estimates-by-Se/n4j6-wkkf/data)\n`",
      "pinned": false,
      "mode": "js"
    },
    {
      "id": 65,
      "value": "mapContainer = html `<div style=\"height:${width*.6 - 50}px\">\n  <div class=\"data-panel\">\n    <b>${dataTable.size.toLocaleString()}</b> Traffic Segments\n  </div>\n  <div id=\"tooltip\"></div>\n</div>`",
      "pinned": false,
      "mode": "js"
    },
    {
      "id": 62,
      "value": "speedLegend = html `\n<div id=\"legend\">\n  <style>\n    #legend {\n      display: flex;\n      font-family: Helvetica, Arial, sans-serif;\n      font-size: 14px;\n    }\n    b {\n      vertical-align: center;\n      position: relative;\n      height: 30px;\n    }\n    svg {\n      margin: 0 15px;\n    }\n  </style>\n  <b>0 mph</b>\n  <svg height=\"20\" width=\"300\">\n    <defs>\n      <linearGradient id=\"grad1\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\n        <stop offset=\"0%\" style=\"stop-color:rgb(255,0,0);stop-opacity:1\" />\n        <stop offset=\"33%\" style=\"stop-color:rgb(255,255,0);stop-opacity:1\" />\n        <stop offset=\"100%\" style=\"stop-color:rgb(0,255,0);stop-opacity:1\" />\n      </linearGradient>\n    </defs>\n    <rect width=\"100%\" height=\"100%\" fill=\"url(#grad1)\" />\n  </svg>\n  <b>60 mph</b>\n</div>\n`",
      "pinned": false,
      "mode": "js"
    },
    {
      "id": 95,
      "value": "trafficSegmentsLayer = {\n  const segmentsLayer = new deck.LineLayer({\n    id: 'trafficSegments',\n    data: dataTable.objects(),\n    opacity: 0.8,\n    pickable: true,\n    getWidth: 8,\n    getColor: d => colorScale(Number(d.current_speed)),\n    getSourcePosition: d => [Number(d.start_longitude), Number(d.start_latitude)],\n    getTargetPosition: d => [Number(d.end_longitude),Number(d.end_latitude)],\n    onHover: onHover\n  });\n  deckgl.setProps({layers: [segmentsLayer]});\n  return segmentsLayer;\n}",
      "pinned": false,
      "mode": "js"
    },
    {
      "id": 7,
      "value": "md`## Data`",
      "pinned": false,
      "mode": "js"
    },
    {
      "id": 10,
      "value": "viewof tableView = Inputs.table(dataTable, {\n  columns,\n  reverse: true\n})",
      "pinned": false,
      "mode": "js"
    },
    {
      "id": 14,
      "value": "md`## Data Queries and Filters`",
      "pinned": false,
      "mode": "js"
    },
    {
      "id": 18,
      "value": "columns = [\n  'segment_id',\n  'from_street',\n  'to_street',\n  'street_heading',\n  'street',\n  'direction',  \n  'segment_length',\n  'current_speed',\n  'start_longitude',\n  'start_latitude',\n  'end_longitude',\n  'end_latitude',\n  'last_updated',\n  'update_date_time'\n]",
      "pinned": false,
      "mode": "js"
    },
    {
      "id": 20,
      "value": "dataUrl = 'https://data.cityofchicago.org/resource/n4j6-wkkf.json'",
      "pinned": false,
      "mode": "js"
    },
    {
      "id": 23,
      "value": "query = `?$limit=100000`",
      "pinned": false,
      "mode": "js"
    },
    {
      "id": 26,
      "value": "data = await fetch(dataUrl + query).then(data => data.json())",
      "pinned": false,
      "mode": "js"
    },
    {
      "id": 45,
      "value": "dataTable = aq.from(data)\n  .filter(d => d._traffic >= 0)\n  .rename({\n    segmentid: 'segment_id',\n    _direction: 'direction',\n    _fromst: 'from_street',\n    _tost: 'to_street',\n    _length: 'segment_length',\n    _strheading: 'street_heading',\n    _traffic: 'current_speed',\n    start_lon: 'start_longitude',\n    _lif_lat: 'start_latitude',\n    _lit_lon: 'end_longitude',\n    _lit_lat: 'end_latitude',\n    _last_updt: 'last_updated'\n  })\n  .derive({\n    update_date_time: d => op.parse_date(d.last_updated)\n  })\n  .orderby('current_speed')",
      "pinned": false,
      "mode": "js"
    },
    {
      "id": 69,
      "value": "md`## Map Elements and Styles`",
      "pinned": false,
      "mode": "js"
    },
    {
      "id": 72,
      "value": "deckgl = {\n  return new deck.DeckGL({\n    container: mapContainer,\n    map: mapboxgl,\n    mapboxAccessToken: '',\n    mapboxApiAccessToken: 'pk.eyJ1IjoiZGF0YXBpeHkiLCJhIjoiY2tnM3ZhZWJjMDE1ajJxbGY1eTNlemduciJ9.YZ9CJEza0hvAQmTRBhubmQ',\n    mapStyle: 'https://basemaps.cartocdn.com/gl/voyager-gl-style/style.json',\n    initialViewState: {\n      latitude: 41.82,\n      longitude: -87.65,\n      zoom: 10,\n      minZoom: 8,\n      maxZoom: 15,\n      pitch: 0,\n      bearing: 0\n    },\n    controller: true\n  });\n}",
      "pinned": false,
      "mode": "js"
    },
    {
      "id": 92,
      "value": "colorScale = (n) => {\n  let color = linearSpeedScale(n)\n  color = color.split(',')\n  color[0] = Number(color[0].substring(4, color[0].length))\n  color[1] = Number(color[1].substring(1, color[1].length))\n  color[2] = Number(color[2].substring(1, color[2].length-1))\n  return color\n}",
      "pinned": false,
      "mode": "js"
    },
    {
      "id": 89,
      "value": "linearSpeedScale = d3.scaleLinear()\n  .domain([-1, 20, 60])\n  .range(['red', 'yellow', 'green']);",
      "pinned": false,
      "mode": "js"
    },
    {
      "id": 75,
      "value": "tooltip = mapContainer.querySelector('#tooltip')",
      "pinned": false,
      "mode": "js"
    },
    {
      "id": 112,
      "value": "function onHover (info) {\n  const data = info.object;\n  if (data) {\n    tooltip.style.left = `${info.x}px`;\n    tooltip.style.top = `${info.y}px`;\n    tooltip.innerHTML = `<b>${data.direction}</b> from <b>${data.from_street}</b> to <b>${data.to_street}</b>\n      on <b>${data.street_heading} ${data.street}</b> street<br />\n      esitmated <b>${Number(data.current_speed).toLocaleString()} mph</b> speed\n      for <b>${data.segment_length}</b> miles<br />\n      last updated on <b>${data.update_date_time.toLocaleDateString()}</b>\n      at <b>${data.update_date_time.toLocaleTimeString()}</b>`;\n  } else { \n    tooltip.innerHTML = '';\n  }\n}",
      "pinned": false,
      "mode": "js"
    },
    {
      "id": 84,
      "value": "tooltipStyle = html `\n<style>\n#tooltip:empty {\n  display: none;\n}\n#tooltip {\n  font-family: Helvetica, Arial, sans-serif;\n  font-size: 12px;\n  position: absolute;\n  padding: 4px;\n  margin: 8px;\n  border-radius: 3px;\n  background: rgba(0, 0, 0, 0.7);\n  color: #fff;\n  max-width: 300px;\n  z-index: 9;\n  pointer-events: none;\n}\n</style>\n`",
      "pinned": false,
      "mode": "js"
    },
    {
      "id": 81,
      "value": "dataPanelStyle = html `\n<style type=\"text/css\">\n.data-panel {\n  position: absolute;\n  top: 0;\n  font-family: Nunito, sans-serif;\n  font-size: 12px;\n  background-color: #f6f6f6;\n  padding: 8px;\n  border-radius: 3px;\n  box-shadow: 1px 2px 4px #888;\n  z-index: 10;\n}\n</style>\n`",
      "pinned": false,
      "mode": "js"
    },
    {
      "id": 78,
      "value": "html`<link href='https://api.tiles.mapbox.com/mapbox-gl-js/v2.3.0/mapbox-gl.css' rel='stylesheet' />\nmapbox-gl.css`",
      "pinned": false,
      "mode": "js"
    },
    {
      "id": 33,
      "value": "md`## Imports`",
      "pinned": false,
      "mode": "js"
    },
    {
      "id": 42,
      "value": "import { aq, op } from '@uwdata/arquero'",
      "pinned": false,
      "mode": "js"
    },
    {
      "id": 36,
      "value": "mapboxgl = require('mapbox-gl@^2.3.0/dist/mapbox-gl.js')",
      "pinned": false,
      "mode": "js"
    },
    {
      "id": 39,
      "value": "deck = require.alias({\n  // optional dependencies\n  h3: {},\n  s2Geometry: {}\n})('deck.gl@^8.4.17/dist.min.js')",
      "pinned": false,
      "mode": "js"
    }
  ]
}